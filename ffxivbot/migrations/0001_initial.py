# Generated by Django 2.0.8 on 2018-12-20 09:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BanMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=16)),
                ('ban_time', models.IntegerField(default=0)),
                ('vote_list', models.TextField(default='{}')),
                ('timestamp', models.BigIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Boss',
            fields=[
                ('boss_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default='', max_length=64)),
                ('cn_name', models.CharField(blank=True, default='', max_length=64)),
                ('nickname', models.TextField(default='{}')),
                ('add_time', models.BigIntegerField(default=0)),
                ('cn_add_time', models.BigIntegerField(default=0)),
                ('parsed_days', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, default='')),
                ('timestamp', models.BigIntegerField(default=0)),
                ('times', models.IntegerField(default=1)),
                ('repeated', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left_by', models.CharField(max_length=16)),
                ('left_time', models.BigIntegerField(default=0)),
                ('content', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='CustomReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField(blank=True, default='')),
                ('value', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='HsoAlterName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=32, unique=True)),
                ('key', models.CharField(default='', max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=64)),
                ('cn_name', models.CharField(blank=True, default='', max_length=64)),
                ('nickname', models.TextField(default='{}')),
            ],
        ),
        migrations.CreateModel(
            name='PlotQuest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
                ('version', models.CharField(max_length=64)),
                ('area', models.CharField(max_length=16)),
                ('category', models.CharField(max_length=32)),
                ('sub_category', models.CharField(max_length=32)),
                ('job', models.CharField(max_length=64)),
                ('startnpc', models.CharField(max_length=64)),
                ('endnpc', models.CharField(max_length=64)),
                ('endpoint', models.BooleanField(default=False)),
                ('html', models.TextField(blank=True, default='')),
                ('crawl_status', models.IntegerField(default=0)),
                ('suf_quests', models.ManyToManyField(blank=True, related_name='pre_quests', to='ffxivbot.PlotQuest')),
            ],
        ),
        migrations.CreateModel(
            name='QQBot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
                ('user_id', models.CharField(max_length=16, unique=True)),
                ('owner_id', models.CharField(max_length=16)),
                ('access_token', models.CharField(default='', max_length=16)),
                ('auto_accept_friend', models.BooleanField(default=False)),
                ('auto_accept_invite', models.BooleanField(default=False)),
                ('tuling_token', models.CharField(blank=True, default='', max_length=32)),
                ('saucenao_token', models.CharField(blank=True, default='', max_length=32)),
                ('api_channel_name', models.CharField(blank=True, default='', max_length=32)),
                ('event_channel_name', models.CharField(blank=True, default='', max_length=32)),
                ('group_list', models.TextField(default='[]')),
                ('plugin_status', models.TextField(default='{}')),
                ('version_info', models.TextField(default='{}')),
                ('event_time', models.BigIntegerField(default=0)),
                ('api_time', models.BigIntegerField(default=0)),
                ('friend_list', models.TextField(default='{}')),
                ('public', models.BooleanField(default=True)),
                ('r18', models.BooleanField(default=False)),
                ('disconnections', models.TextField(default='[]')),
                ('disconnect_time', models.BigIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='QQGroup',
            fields=[
                ('group_id', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('welcome_msg', models.TextField(blank=True, default='')),
                ('bots', models.TextField(default='[]')),
                ('repeat_ban', models.IntegerField(default=-1)),
                ('repeat_length', models.IntegerField(default=-1)),
                ('repeat_prob', models.IntegerField(default=0)),
                ('left_reply_cnt', models.IntegerField(default=100)),
                ('ban_cnt', models.IntegerField(default=-1)),
                ('ban_till', models.BigIntegerField(default=0)),
                ('last_reply_time', models.BigIntegerField(default=0)),
                ('member_list', models.TextField(default='[]')),
                ('registered', models.BooleanField(default=False)),
                ('commands', models.TextField(default='{}')),
            ],
        ),
        migrations.CreateModel(
            name='QQUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=16, unique=True)),
                ('bot_token', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('quest_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default='', max_length=64)),
                ('cn_name', models.CharField(blank=True, default='', max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='RandomScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=16)),
                ('max_random', models.IntegerField(default=0)),
                ('min_random', models.IntegerField(default=1001)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ffxivbot.QQGroup')),
            ],
        ),
        migrations.CreateModel(
            name='Revenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=16)),
                ('vote_list', models.TextField(default='{}')),
                ('timestamp', models.BigIntegerField(default=0)),
                ('ban_time', models.IntegerField(default=0)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ffxivbot.QQGroup')),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
                ('areaId', models.IntegerField(default=1)),
                ('groupId', models.IntegerField(default=25)),
                ('alter_names', models.TextField(default='[]')),
            ],
        ),
        migrations.CreateModel(
            name='SorryGIF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
                ('api_name', models.CharField(max_length=32)),
                ('example', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('starttime', models.BigIntegerField(default=0)),
                ('endtime', models.BigIntegerField(default=0)),
                ('vote', models.TextField(default='{}')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ffxivbot.QQGroup')),
            ],
        ),
        migrations.CreateModel(
            name='WeiboTile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemid', models.CharField(default='', max_length=128)),
                ('content', models.TextField(default='{}')),
                ('crawled_time', models.BigIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='WeiboUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=16, unique=True)),
                ('uid', models.CharField(default='', max_length=16)),
                ('containerid', models.CharField(default='', max_length=32)),
                ('last_update_time', models.BigIntegerField(default=0)),
            ],
        ),
        migrations.AddField(
            model_name='weibotile',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tile', to='ffxivbot.WeiboUser'),
        ),
        migrations.AddField(
            model_name='weibotile',
            name='pushed_group',
            field=models.ManyToManyField(related_name='pushed_weibo', to='ffxivbot.QQGroup'),
        ),
        migrations.AddField(
            model_name='qqgroup',
            name='subscription',
            field=models.ManyToManyField(blank=True, related_name='subscribed_by', to='ffxivbot.WeiboUser'),
        ),
        migrations.AddField(
            model_name='customreply',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ffxivbot.QQGroup'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ffxivbot.QQGroup'),
        ),
        migrations.AddField(
            model_name='boss',
            name='quest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ffxivbot.Quest'),
        ),
        migrations.AddField(
            model_name='banmember',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ffxivbot.QQGroup'),
        ),
    ]
